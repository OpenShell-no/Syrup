# This installs two files, app.exe and logo.ico, creates a start menu shortcut, builds an uninstaller, and
# adds uninstall information to the registry for Add/Remove Programs
 
# To get started, put this script into a folder with the two files (app.exe, logo.ico, and license.rtf -
# You'll have to create these yourself) and run makensis on it
 
# If you change the names "app.exe", "logo.ico", or "license.rtf" you should do a search and replace - they
# show up in a few places.
# All the other settings can be tweaked by editing the !defines at the top of this script
!define APPNAME "{{ name }}"
!define COMPANYNAME "{{ company }}"
{% if description is defined and description %}
!define DESCRIPTION "{{ description }}"
{% else %}
!define DESCRIPTION ""
{% endif %}
# These three must be integers
!define VERSIONMAJOR {{ version.major }}
!define VERSIONMINOR {{ version.minor }}
!define VERSIONBUILD {{ version.build }}
# These will be displayed by the "Click here for support information" link in "Add/Remove Programs"
# It is possible to use "mailto:" links in here to open the email client
{% if help_url is defined and help_url %}
!define HELPURL "{{ help_url }}" # "Support Information" link
{% endif %}
{% if update_url is defined and update_url %}
!define UPDATEURL "{{ update_url }}" # "Product Updates" link
{% endif %}
{% if website_url is defined and website_url %}
!define ABOUTURL "{{ website_url }}" # "Publisher" link
{% endif %}
# This is the size (in kB) of all the files copied into "Program Files"
!define INSTALLSIZE {{ size }}
!define REG HKCU
 
#RequestExecutionLevel admin ;Require admin rights on NT6+ (When UAC is turned on)
RequestExecutionLevel user

#InstallDir "$PROGRAMFILES\${COMPANYNAME}\${APPNAME}"
InstallDir "$LOCALAPPDATA\${COMPANYNAME}\${APPNAME}"

# rtf or txt file - remember if it is txt, it must be in the DOS text format (\r\n)
{% if license is defined and license %}
LicenseData {{ license }}
{% endif %}
# This will be in the installer/uninstaller's title bar
Name "${COMPANYNAME} - ${APPNAME}"
{% if icon is defined and icon %}
Icon "{{ icon }}"
{% endif %}
OutFile "{{ outfile }}"
 
!include LogicLib.nsh
 
# Just three pages - license agreement, install location, and installation
{% if license is defined and license %}
page license
{% endif %}
page directory
Page instfiles
 
#!macro VerifyUserIsAdmin
#UserInfo::GetAccountType
#pop $0
#${If} $0 != "admin" ;Require admin rights on NT4+
#		messageBox mb_iconstop "Administrator rights required!"
#		setErrorLevel 740 ;ERROR_ELEVATION_REQUIRED
#		quit
#${EndIf}
#!macroend
 
function .onInit
	setShellVarContext current
#	!insertmacro VerifyUserIsAdmin
functionEnd
 
section "install"
	# Files for the install directory - to build the installer, these should be in the same directory as the install script (this file)
	setOutPath $INSTDIR
	
{% for dir in dirs %}
	CreateDirectory "$INSTDIR\{{ dir }}"{% endfor %}

	# Files added here should be removed by the uninstaller (see section "uninstall")
{% for file in files %}
	File "/oname={{ file.output }}" "{{ file.input }}"{% endfor %}

	# Uninstaller - See function un.onInit and section "uninstall" for configuration
	writeUninstaller "$INSTDIR\uninstall.exe"

	# Start Menu
	createDirectory "$SMPROGRAMS\${COMPANYNAME}"
{% for executable in executables %}
  	{% if prev is undefined %}
	  	{% if icon is defined and icon %}
	createShortCut "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk" "$INSTDIR\{{ executable }}" "" "$INSTDIR\{{ icon }}"
		{% else %}
	createShortCut "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk" "$INSTDIR\{{ executable }}"
		{% endif %}
  	{% else %}
	createShortCut "$SMPROGRAMS\${COMPANYNAME}\{{ executable | replace(".exe", "") }}.lnk" "$INSTDIR\{{ executable }}"
  	{% endif %}
{% endfor %}
 
	# Registry information for add/remove programs
{% if description is defined and description %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayName" "${APPNAME} - ${DESCRIPTION}"
{% else %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayName" "${APPNAME}"
{% endif %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "QuietUninstallString" "$\"$INSTDIR\uninstall.exe$\" /S"
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "InstallLocation" "$INSTDIR"
{% if icon is defined and icon %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayIcon" "$INSTDIR\{{ icon }}"
{% else %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayIcon" "$INSTDIR\{{ executables | first }}"
{% endif %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "Publisher" "${COMPANYNAME}"
{% if help_url is defined and help_url %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "HelpLink" "${HELPURL}"
{% endif %}
{% if update_url is defined and update_url %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "URLUpdateInfo" "${UPDATEURL}"
{% endif %}
{% if website_url is defined and website_url %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "URLInfoAbout" "${ABOUTURL}"
{% endif %}
	WriteRegStr "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayVersion" "${VERSIONMAJOR}.${VERSIONMINOR}.${VERSIONBUILD}"
	WriteRegDWORD "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "VersionMajor" ${VERSIONMAJOR}
	WriteRegDWORD "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "VersionMinor" ${VERSIONMINOR}
	# There is no option for modifying or repairing the install
	WriteRegDWORD "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "NoModify" 1
	WriteRegDWORD "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "NoRepair" 1
	# Set the INSTALLSIZE constant (!defined at the top of this script) so Add/Remove Programs can accurately report the size
	WriteRegDWORD "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "EstimatedSize" ${INSTALLSIZE}

sectionEnd
 
# Uninstaller
 
function un.onInit
	SetShellVarContext current
 
	#Verify the uninstaller - last chance to back out
	MessageBox MB_OKCANCEL "Permanantly remove ${APPNAME}?" IDOK next
		Abort
	next:
#	!insertmacro VerifyUserIsAdmin
functionEnd
 
section "uninstall"
 
	# Remove Start Menu launcher
	delete "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk"
	# Try to remove the Start Menu folder - this will only happen if it is empty
	rmDir "$SMPROGRAMS\${COMPANYNAME}"
 
	# Remove files
{% for file in files %}
	delete "$INSTDIR\{{ file.output }}"{% endfor %}

{% for dir in dirs %}
	rmDir "$INSTDIR\{{ dir }}"{% endfor %}
 
	# Always delete uninstaller as the last action
	delete "$INSTDIR\uninstall.exe"
 
	# Try to remove the install directory - this will only happen if it is empty
	rmDir "$INSTDIR"
 
	# Remove uninstaller information from the registry
	DeleteRegKey "${REG}" "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}"
sectionEnd